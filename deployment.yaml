apiVersion: apps/v1 # Kubernetes Deployment yaml. 최신 버전은 Kubernetes Docs에서 확인.
kind: Deployment # 리소스 종류. 다른 옵션으로는 Service, Job 등이 있음.
metadata:
  name: second-app-deployment # Deployment의 이름.
  labels:
    group: example
spec: # Deployment의 구성 방법 정의.
  replicas: 1 # Pod의 복제본 수. 기본값은 1.
  selector:
    matchLabels: # matchExpressions를 사용하여 라벨 선택 가능.
      # Deployment가 제어할 Pod 라벨의 키-값 쌍을 정의.
      app: second-app
      tier: backend
    # matchExpressions: # matchLabels와 같은 역할을 하지만, 더 복잡한 선택 기준을 제공.
    #   # matchExpressions는 여러 조건을 조합하여 Pod을 선택할 수 있음.
    #   # 각 조건은 key, operator, values로 구성됨.
    #   # - key: 조건의 대상이 되는 라벨의 키.
    #   # - operator: 라벨 값을 비교할 때 사용하는 연산자.
    #   #   - In: 지정한 값들 중 하나와 일치해야 함.
    #   #   - NotIn: 지정한 값들 중 어느 것도 일치하지 않아야 함.
    #   #   - Exists: 해당 키가 존재해야 함.
    #   #   - DoesNotExist: 해당 키가 존재하지 않아야 함.
    #   # - values: 라벨 키가 가질 수 있는 값들의 배열. operator에 따라 필요한 경우가 있음.
    #   # 아래 예시는 app 라벨이 "second-app" 또는 "first-app"인 Pod을 선택함.
    #   - { key: app, operator: In, values: [second-app, first-app] }
  template: # Pod의 구성 방법 정의.
    metadata:
      labels: # Pod 라벨 정의.
        app: second-app # "app" 대신 원하는 라벨 키 정의 가능.
        tier: backend
    spec: # Pod 구성 방법 정의.
      containers: # '-'를 통해 여러 컨테이너 설정 가능.
        - name: second-node # 컨테이너 이름.
          image: devyuminkim/kub-first-app:2 # 컨테이너 이미지.
          imagePullPolicy: Always # 이미지 풀링 정책. Always, IfNotPresent, Never 중 선택.
          livenessProb: # 자체 활성 프로브
            httpGet:
              path: /
              port: 8080
            periodSeconds: 10
            initialDelaySeconds: 5
